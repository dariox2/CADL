Loading tensorflow...
Reading text file...
txt:  1925   vocab:  53
Xs.get_shape:  [None, 30, 256]
Creating prediction layer...
  Initializing...
ANTES=============
name: "X"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}

name: "Y"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}

name: "embedding"
op: "Variable"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 53
      }
      dim {
        size: 256
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "embedding/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "5\000\000\000\000\001\000\000"
    }
  }
}

name: "embedding/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.23791547119617462
    }
  }
}

name: "embedding/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.23791547119617462
    }
  }
}

name: "embedding/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "embedding/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "embedding/Initializer/random_uniform/sub"
op: "Sub"
input: "embedding/Initializer/random_uniform/max"
input: "embedding/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}

name: "embedding/Initializer/random_uniform/mul"
op: "Mul"
input: "embedding/Initializer/random_uniform/RandomUniform"
input: "embedding/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}

name: "embedding/Initializer/random_uniform"
op: "Add"
input: "embedding/Initializer/random_uniform/mul"
input: "embedding/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}

name: "embedding/Assign"
op: "Assign"
input: "embedding"
input: "embedding/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "embedding/read"
op: "Identity"
input: "embedding"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}

name: "embedding_lookup"
op: "Gather"
input: "embedding/read"
input: "X"
attr {
  key: "Tindices"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tparams"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}
attr {
  key: "validate_indices"
  value {
    b: true
  }
}

name: "split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "split"
op: "Split"
input: "split/split_dim"
input: "embedding_lookup"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 30
  }
}

name: "Squeeze"
op: "Squeeze"
input: "split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_1"
op: "Squeeze"
input: "split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_2"
op: "Squeeze"
input: "split:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_3"
op: "Squeeze"
input: "split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_4"
op: "Squeeze"
input: "split:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_5"
op: "Squeeze"
input: "split:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_6"
op: "Squeeze"
input: "split:6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_7"
op: "Squeeze"
input: "split:7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_8"
op: "Squeeze"
input: "split:8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_9"
op: "Squeeze"
input: "split:9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_10"
op: "Squeeze"
input: "split:10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_11"
op: "Squeeze"
input: "split:11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_12"
op: "Squeeze"
input: "split:12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_13"
op: "Squeeze"
input: "split:13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_14"
op: "Squeeze"
input: "split:14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_15"
op: "Squeeze"
input: "split:15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_16"
op: "Squeeze"
input: "split:16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_17"
op: "Squeeze"
input: "split:17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_18"
op: "Squeeze"
input: "split:18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_19"
op: "Squeeze"
input: "split:19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_20"
op: "Squeeze"
input: "split:20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_21"
op: "Squeeze"
input: "split:21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_22"
op: "Squeeze"
input: "split:22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_23"
op: "Squeeze"
input: "split:23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_24"
op: "Squeeze"
input: "split:24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_25"
op: "Squeeze"
input: "split:25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_26"
op: "Squeeze"
input: "split:26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_27"
op: "Squeeze"
input: "split:27"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_28"
op: "Squeeze"
input: "split:28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_29"
op: "Squeeze"
input: "split:29"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "RNN/Shape"
op: "Shape"
input: "Squeeze"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/Slice/begin"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "RNN/Slice/size"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "RNN/Slice"
op: "Slice"
input: "RNN/Shape"
input: "RNN/Slice/begin"
input: "RNN/Slice/size"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "RNN/Squeeze"
op: "Squeeze"
input: "RNN/Slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 0
    }
  }
}

name: "RNN/pack/1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 256
    }
  }
}

name: "RNN/pack"
op: "Pack"
input: "RNN/Squeeze"
input: "RNN/pack/1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "RNN/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "RNN/zeros"
op: "Fill"
input: "RNN/pack"
input: "RNN/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/pack_1/1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 256
    }
  }
}

name: "RNN/pack_1"
op: "Pack"
input: "RNN/Squeeze"
input: "RNN/pack_1/1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "RNN/zeros_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "RNN/zeros_1"
op: "Fill"
input: "RNN/pack_1"
input: "RNN/zeros_1/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix"
op: "Variable"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 512
      }
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\002\000\000\000\004\000\000"
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0765465572476387
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0765465572476387
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
op: "Sub"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
op: "Mul"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
op: "Add"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Assign"
op: "Assign"
input: "RNN/BasicLSTMCell/Linear/Matrix"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/read"
op: "Identity"
input: "RNN/BasicLSTMCell/Linear/Matrix"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell/Linear/concat/concat_dim"
input: "Squeeze"
input: "RNN/zeros_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell/Linear/Bias"
op: "Variable"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "RNN/BasicLSTMCell/Linear/Bias/Initializer/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 1024
        }
      }
      float_val: 0.0
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/Bias/Assign"
op: "Assign"
input: "RNN/BasicLSTMCell/Linear/Bias"
input: "RNN/BasicLSTMCell/Linear/Bias/Initializer/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "RNN/BasicLSTMCell/Linear/Bias/read"
op: "Identity"
input: "RNN/BasicLSTMCell/Linear/Bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/add"
op: "Add"
input: "RNN/BasicLSTMCell/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell/split"
op: "Split"
input: "RNN/BasicLSTMCell/split/split_dim"
input: "RNN/BasicLSTMCell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell/add_1"
op: "Add"
input: "RNN/BasicLSTMCell/split:2"
input: "RNN/BasicLSTMCell/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/mul"
op: "Mul"
input: "RNN/zeros"
input: "RNN/BasicLSTMCell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell/Sigmoid_1"
input: "RNN/BasicLSTMCell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/add_2"
op: "Add"
input: "RNN/BasicLSTMCell/mul"
input: "RNN/BasicLSTMCell/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell/Tanh_1"
input: "RNN/BasicLSTMCell/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_1/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_1/Linear/concat/concat_dim"
input: "Squeeze_1"
input: "RNN/BasicLSTMCell/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_1/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_1/add"
op: "Add"
input: "RNN/BasicLSTMCell_1/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_1/split"
op: "Split"
input: "RNN/BasicLSTMCell_1/split/split_dim"
input: "RNN/BasicLSTMCell_1/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_1/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_1/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_1/split:2"
input: "RNN/BasicLSTMCell_1/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_1/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/mul"
op: "Mul"
input: "RNN/BasicLSTMCell/add_2"
input: "RNN/BasicLSTMCell_1/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_1/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_1/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_1/Sigmoid_1"
input: "RNN/BasicLSTMCell_1/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_1/mul"
input: "RNN/BasicLSTMCell_1/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_1/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_1/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_1/Tanh_1"
input: "RNN/BasicLSTMCell_1/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_2/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_2/Linear/concat/concat_dim"
input: "Squeeze_2"
input: "RNN/BasicLSTMCell_1/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_2/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_2/add"
op: "Add"
input: "RNN/BasicLSTMCell_2/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_2/split"
op: "Split"
input: "RNN/BasicLSTMCell_2/split/split_dim"
input: "RNN/BasicLSTMCell_2/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_2/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_2/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_2/split:2"
input: "RNN/BasicLSTMCell_2/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_2/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_1/add_2"
input: "RNN/BasicLSTMCell_2/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_2/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_2/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_2/Sigmoid_1"
input: "RNN/BasicLSTMCell_2/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_2/mul"
input: "RNN/BasicLSTMCell_2/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_2/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_2/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_2/Tanh_1"
input: "RNN/BasicLSTMCell_2/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_3/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_3/Linear/concat/concat_dim"
input: "Squeeze_3"
input: "RNN/BasicLSTMCell_2/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_3/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_3/add"
op: "Add"
input: "RNN/BasicLSTMCell_3/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_3/split"
op: "Split"
input: "RNN/BasicLSTMCell_3/split/split_dim"
input: "RNN/BasicLSTMCell_3/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_3/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_3/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_3/split:2"
input: "RNN/BasicLSTMCell_3/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_3/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_2/add_2"
input: "RNN/BasicLSTMCell_3/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_3/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_3/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_3/Sigmoid_1"
input: "RNN/BasicLSTMCell_3/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_3/mul"
input: "RNN/BasicLSTMCell_3/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_3/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_3/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_3/Tanh_1"
input: "RNN/BasicLSTMCell_3/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_4/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_4/Linear/concat/concat_dim"
input: "Squeeze_4"
input: "RNN/BasicLSTMCell_3/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_4/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_4/add"
op: "Add"
input: "RNN/BasicLSTMCell_4/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_4/split"
op: "Split"
input: "RNN/BasicLSTMCell_4/split/split_dim"
input: "RNN/BasicLSTMCell_4/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_4/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_4/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_4/split:2"
input: "RNN/BasicLSTMCell_4/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_4/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_3/add_2"
input: "RNN/BasicLSTMCell_4/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_4/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_4/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_4/Sigmoid_1"
input: "RNN/BasicLSTMCell_4/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_4/mul"
input: "RNN/BasicLSTMCell_4/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_4/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_4/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_4/Tanh_1"
input: "RNN/BasicLSTMCell_4/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_5/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_5/Linear/concat/concat_dim"
input: "Squeeze_5"
input: "RNN/BasicLSTMCell_4/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_5/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_5/add"
op: "Add"
input: "RNN/BasicLSTMCell_5/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_5/split"
op: "Split"
input: "RNN/BasicLSTMCell_5/split/split_dim"
input: "RNN/BasicLSTMCell_5/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_5/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_5/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_5/split:2"
input: "RNN/BasicLSTMCell_5/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_5/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_4/add_2"
input: "RNN/BasicLSTMCell_5/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_5/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_5/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_5/Sigmoid_1"
input: "RNN/BasicLSTMCell_5/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_5/mul"
input: "RNN/BasicLSTMCell_5/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_5/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_5/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_5/Tanh_1"
input: "RNN/BasicLSTMCell_5/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_6/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_6/Linear/concat/concat_dim"
input: "Squeeze_6"
input: "RNN/BasicLSTMCell_5/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_6/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_6/add"
op: "Add"
input: "RNN/BasicLSTMCell_6/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_6/split"
op: "Split"
input: "RNN/BasicLSTMCell_6/split/split_dim"
input: "RNN/BasicLSTMCell_6/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_6/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_6/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_6/split:2"
input: "RNN/BasicLSTMCell_6/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_6/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_5/add_2"
input: "RNN/BasicLSTMCell_6/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_6/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_6/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_6/Sigmoid_1"
input: "RNN/BasicLSTMCell_6/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_6/mul"
input: "RNN/BasicLSTMCell_6/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_6/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_6/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_6/Tanh_1"
input: "RNN/BasicLSTMCell_6/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_7/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_7/Linear/concat/concat_dim"
input: "Squeeze_7"
input: "RNN/BasicLSTMCell_6/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_7/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_7/add"
op: "Add"
input: "RNN/BasicLSTMCell_7/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_7/split"
op: "Split"
input: "RNN/BasicLSTMCell_7/split/split_dim"
input: "RNN/BasicLSTMCell_7/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_7/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_7/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_7/split:2"
input: "RNN/BasicLSTMCell_7/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_7/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_6/add_2"
input: "RNN/BasicLSTMCell_7/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_7/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_7/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_7/Sigmoid_1"
input: "RNN/BasicLSTMCell_7/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_7/mul"
input: "RNN/BasicLSTMCell_7/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_7/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_7/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_7/Tanh_1"
input: "RNN/BasicLSTMCell_7/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_8/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_8/Linear/concat/concat_dim"
input: "Squeeze_8"
input: "RNN/BasicLSTMCell_7/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_8/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_8/add"
op: "Add"
input: "RNN/BasicLSTMCell_8/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_8/split"
op: "Split"
input: "RNN/BasicLSTMCell_8/split/split_dim"
input: "RNN/BasicLSTMCell_8/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_8/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_8/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_8/split:2"
input: "RNN/BasicLSTMCell_8/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_8/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_7/add_2"
input: "RNN/BasicLSTMCell_8/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_8/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_8/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_8/Sigmoid_1"
input: "RNN/BasicLSTMCell_8/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_8/mul"
input: "RNN/BasicLSTMCell_8/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_8/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_8/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_8/Tanh_1"
input: "RNN/BasicLSTMCell_8/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_9/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_9/Linear/concat/concat_dim"
input: "Squeeze_9"
input: "RNN/BasicLSTMCell_8/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_9/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_9/add"
op: "Add"
input: "RNN/BasicLSTMCell_9/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_9/split"
op: "Split"
input: "RNN/BasicLSTMCell_9/split/split_dim"
input: "RNN/BasicLSTMCell_9/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_9/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_9/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_9/split:2"
input: "RNN/BasicLSTMCell_9/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_9/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_8/add_2"
input: "RNN/BasicLSTMCell_9/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_9/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_9/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_9/Sigmoid_1"
input: "RNN/BasicLSTMCell_9/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_9/mul"
input: "RNN/BasicLSTMCell_9/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_9/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_9/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_9/Tanh_1"
input: "RNN/BasicLSTMCell_9/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_10/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_10/Linear/concat/concat_dim"
input: "Squeeze_10"
input: "RNN/BasicLSTMCell_9/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_10/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_10/add"
op: "Add"
input: "RNN/BasicLSTMCell_10/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_10/split"
op: "Split"
input: "RNN/BasicLSTMCell_10/split/split_dim"
input: "RNN/BasicLSTMCell_10/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_10/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_10/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_10/split:2"
input: "RNN/BasicLSTMCell_10/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_10/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_9/add_2"
input: "RNN/BasicLSTMCell_10/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_10/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_10/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_10/Sigmoid_1"
input: "RNN/BasicLSTMCell_10/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_10/mul"
input: "RNN/BasicLSTMCell_10/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_10/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_10/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_10/Tanh_1"
input: "RNN/BasicLSTMCell_10/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_11/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_11/Linear/concat/concat_dim"
input: "Squeeze_11"
input: "RNN/BasicLSTMCell_10/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_11/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_11/add"
op: "Add"
input: "RNN/BasicLSTMCell_11/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_11/split"
op: "Split"
input: "RNN/BasicLSTMCell_11/split/split_dim"
input: "RNN/BasicLSTMCell_11/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_11/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_11/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_11/split:2"
input: "RNN/BasicLSTMCell_11/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_11/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_10/add_2"
input: "RNN/BasicLSTMCell_11/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_11/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_11/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_11/Sigmoid_1"
input: "RNN/BasicLSTMCell_11/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_11/mul"
input: "RNN/BasicLSTMCell_11/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_11/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_11/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_11/Tanh_1"
input: "RNN/BasicLSTMCell_11/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_12/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_12/Linear/concat/concat_dim"
input: "Squeeze_12"
input: "RNN/BasicLSTMCell_11/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_12/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_12/add"
op: "Add"
input: "RNN/BasicLSTMCell_12/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_12/split"
op: "Split"
input: "RNN/BasicLSTMCell_12/split/split_dim"
input: "RNN/BasicLSTMCell_12/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_12/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_12/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_12/split:2"
input: "RNN/BasicLSTMCell_12/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_12/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_11/add_2"
input: "RNN/BasicLSTMCell_12/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_12/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_12/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_12/Sigmoid_1"
input: "RNN/BasicLSTMCell_12/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_12/mul"
input: "RNN/BasicLSTMCell_12/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_12/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_12/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_12/Tanh_1"
input: "RNN/BasicLSTMCell_12/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_13/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_13/Linear/concat/concat_dim"
input: "Squeeze_13"
input: "RNN/BasicLSTMCell_12/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_13/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_13/add"
op: "Add"
input: "RNN/BasicLSTMCell_13/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_13/split"
op: "Split"
input: "RNN/BasicLSTMCell_13/split/split_dim"
input: "RNN/BasicLSTMCell_13/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_13/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_13/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_13/split:2"
input: "RNN/BasicLSTMCell_13/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_13/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_12/add_2"
input: "RNN/BasicLSTMCell_13/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_13/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_13/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_13/Sigmoid_1"
input: "RNN/BasicLSTMCell_13/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_13/mul"
input: "RNN/BasicLSTMCell_13/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_13/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_13/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_13/Tanh_1"
input: "RNN/BasicLSTMCell_13/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_14/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_14/Linear/concat/concat_dim"
input: "Squeeze_14"
input: "RNN/BasicLSTMCell_13/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_14/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_14/add"
op: "Add"
input: "RNN/BasicLSTMCell_14/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_14/split"
op: "Split"
input: "RNN/BasicLSTMCell_14/split/split_dim"
input: "RNN/BasicLSTMCell_14/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_14/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_14/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_14/split:2"
input: "RNN/BasicLSTMCell_14/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_14/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_13/add_2"
input: "RNN/BasicLSTMCell_14/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_14/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_14/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_14/Sigmoid_1"
input: "RNN/BasicLSTMCell_14/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_14/mul"
input: "RNN/BasicLSTMCell_14/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_14/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_14/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_14/Tanh_1"
input: "RNN/BasicLSTMCell_14/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_15/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_15/Linear/concat/concat_dim"
input: "Squeeze_15"
input: "RNN/BasicLSTMCell_14/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_15/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_15/add"
op: "Add"
input: "RNN/BasicLSTMCell_15/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_15/split"
op: "Split"
input: "RNN/BasicLSTMCell_15/split/split_dim"
input: "RNN/BasicLSTMCell_15/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_15/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_15/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_15/split:2"
input: "RNN/BasicLSTMCell_15/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_15/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_14/add_2"
input: "RNN/BasicLSTMCell_15/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_15/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_15/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_15/Sigmoid_1"
input: "RNN/BasicLSTMCell_15/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_15/mul"
input: "RNN/BasicLSTMCell_15/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_15/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_15/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_15/Tanh_1"
input: "RNN/BasicLSTMCell_15/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_16/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_16/Linear/concat/concat_dim"
input: "Squeeze_16"
input: "RNN/BasicLSTMCell_15/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_16/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_16/add"
op: "Add"
input: "RNN/BasicLSTMCell_16/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_16/split"
op: "Split"
input: "RNN/BasicLSTMCell_16/split/split_dim"
input: "RNN/BasicLSTMCell_16/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_16/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_16/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_16/split:2"
input: "RNN/BasicLSTMCell_16/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_16/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_15/add_2"
input: "RNN/BasicLSTMCell_16/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_16/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_16/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_16/Sigmoid_1"
input: "RNN/BasicLSTMCell_16/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_16/mul"
input: "RNN/BasicLSTMCell_16/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_16/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_16/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_16/Tanh_1"
input: "RNN/BasicLSTMCell_16/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_17/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_17/Linear/concat/concat_dim"
input: "Squeeze_17"
input: "RNN/BasicLSTMCell_16/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_17/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_17/add"
op: "Add"
input: "RNN/BasicLSTMCell_17/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_17/split"
op: "Split"
input: "RNN/BasicLSTMCell_17/split/split_dim"
input: "RNN/BasicLSTMCell_17/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_17/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_17/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_17/split:2"
input: "RNN/BasicLSTMCell_17/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_17/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_16/add_2"
input: "RNN/BasicLSTMCell_17/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_17/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_17/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_17/Sigmoid_1"
input: "RNN/BasicLSTMCell_17/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_17/mul"
input: "RNN/BasicLSTMCell_17/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_17/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_17/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_17/Tanh_1"
input: "RNN/BasicLSTMCell_17/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_18/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_18/Linear/concat/concat_dim"
input: "Squeeze_18"
input: "RNN/BasicLSTMCell_17/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_18/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_18/add"
op: "Add"
input: "RNN/BasicLSTMCell_18/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_18/split"
op: "Split"
input: "RNN/BasicLSTMCell_18/split/split_dim"
input: "RNN/BasicLSTMCell_18/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_18/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_18/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_18/split:2"
input: "RNN/BasicLSTMCell_18/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_18/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_17/add_2"
input: "RNN/BasicLSTMCell_18/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_18/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_18/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_18/Sigmoid_1"
input: "RNN/BasicLSTMCell_18/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_18/mul"
input: "RNN/BasicLSTMCell_18/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_18/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_18/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_18/Tanh_1"
input: "RNN/BasicLSTMCell_18/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_19/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_19/Linear/concat/concat_dim"
input: "Squeeze_19"
input: "RNN/BasicLSTMCell_18/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_19/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_19/add"
op: "Add"
input: "RNN/BasicLSTMCell_19/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_19/split"
op: "Split"
input: "RNN/BasicLSTMCell_19/split/split_dim"
input: "RNN/BasicLSTMCell_19/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_19/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_19/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_19/split:2"
input: "RNN/BasicLSTMCell_19/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_19/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_18/add_2"
input: "RNN/BasicLSTMCell_19/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_19/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_19/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_19/Sigmoid_1"
input: "RNN/BasicLSTMCell_19/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_19/mul"
input: "RNN/BasicLSTMCell_19/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_19/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_19/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_19/Tanh_1"
input: "RNN/BasicLSTMCell_19/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_20/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_20/Linear/concat/concat_dim"
input: "Squeeze_20"
input: "RNN/BasicLSTMCell_19/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_20/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_20/add"
op: "Add"
input: "RNN/BasicLSTMCell_20/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_20/split"
op: "Split"
input: "RNN/BasicLSTMCell_20/split/split_dim"
input: "RNN/BasicLSTMCell_20/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_20/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_20/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_20/split:2"
input: "RNN/BasicLSTMCell_20/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_20/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_19/add_2"
input: "RNN/BasicLSTMCell_20/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_20/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_20/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_20/Sigmoid_1"
input: "RNN/BasicLSTMCell_20/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_20/mul"
input: "RNN/BasicLSTMCell_20/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_20/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_20/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_20/Tanh_1"
input: "RNN/BasicLSTMCell_20/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_21/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_21/Linear/concat/concat_dim"
input: "Squeeze_21"
input: "RNN/BasicLSTMCell_20/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_21/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_21/add"
op: "Add"
input: "RNN/BasicLSTMCell_21/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_21/split"
op: "Split"
input: "RNN/BasicLSTMCell_21/split/split_dim"
input: "RNN/BasicLSTMCell_21/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_21/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_21/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_21/split:2"
input: "RNN/BasicLSTMCell_21/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_21/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_20/add_2"
input: "RNN/BasicLSTMCell_21/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_21/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_21/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_21/Sigmoid_1"
input: "RNN/BasicLSTMCell_21/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_21/mul"
input: "RNN/BasicLSTMCell_21/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_21/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_21/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_21/Tanh_1"
input: "RNN/BasicLSTMCell_21/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_22/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_22/Linear/concat/concat_dim"
input: "Squeeze_22"
input: "RNN/BasicLSTMCell_21/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_22/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_22/add"
op: "Add"
input: "RNN/BasicLSTMCell_22/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_22/split"
op: "Split"
input: "RNN/BasicLSTMCell_22/split/split_dim"
input: "RNN/BasicLSTMCell_22/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_22/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_22/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_22/split:2"
input: "RNN/BasicLSTMCell_22/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_22/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_21/add_2"
input: "RNN/BasicLSTMCell_22/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_22/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_22/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_22/Sigmoid_1"
input: "RNN/BasicLSTMCell_22/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_22/mul"
input: "RNN/BasicLSTMCell_22/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_22/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_22/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_22/Tanh_1"
input: "RNN/BasicLSTMCell_22/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_23/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_23/Linear/concat/concat_dim"
input: "Squeeze_23"
input: "RNN/BasicLSTMCell_22/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_23/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_23/add"
op: "Add"
input: "RNN/BasicLSTMCell_23/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_23/split"
op: "Split"
input: "RNN/BasicLSTMCell_23/split/split_dim"
input: "RNN/BasicLSTMCell_23/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_23/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_23/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_23/split:2"
input: "RNN/BasicLSTMCell_23/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_23/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_22/add_2"
input: "RNN/BasicLSTMCell_23/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_23/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_23/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_23/Sigmoid_1"
input: "RNN/BasicLSTMCell_23/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_23/mul"
input: "RNN/BasicLSTMCell_23/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_23/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_23/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_23/Tanh_1"
input: "RNN/BasicLSTMCell_23/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_24/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_24/Linear/concat/concat_dim"
input: "Squeeze_24"
input: "RNN/BasicLSTMCell_23/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_24/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_24/add"
op: "Add"
input: "RNN/BasicLSTMCell_24/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_24/split"
op: "Split"
input: "RNN/BasicLSTMCell_24/split/split_dim"
input: "RNN/BasicLSTMCell_24/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_24/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_24/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_24/split:2"
input: "RNN/BasicLSTMCell_24/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_24/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_23/add_2"
input: "RNN/BasicLSTMCell_24/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_24/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_24/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_24/Sigmoid_1"
input: "RNN/BasicLSTMCell_24/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_24/mul"
input: "RNN/BasicLSTMCell_24/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_24/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_24/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_24/Tanh_1"
input: "RNN/BasicLSTMCell_24/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_25/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_25/Linear/concat/concat_dim"
input: "Squeeze_25"
input: "RNN/BasicLSTMCell_24/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_25/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_25/add"
op: "Add"
input: "RNN/BasicLSTMCell_25/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_25/split"
op: "Split"
input: "RNN/BasicLSTMCell_25/split/split_dim"
input: "RNN/BasicLSTMCell_25/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_25/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_25/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_25/split:2"
input: "RNN/BasicLSTMCell_25/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_25/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_24/add_2"
input: "RNN/BasicLSTMCell_25/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_25/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_25/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_25/Sigmoid_1"
input: "RNN/BasicLSTMCell_25/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_25/mul"
input: "RNN/BasicLSTMCell_25/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_25/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_25/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_25/Tanh_1"
input: "RNN/BasicLSTMCell_25/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_26/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_26/Linear/concat/concat_dim"
input: "Squeeze_26"
input: "RNN/BasicLSTMCell_25/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_26/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_26/add"
op: "Add"
input: "RNN/BasicLSTMCell_26/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_26/split"
op: "Split"
input: "RNN/BasicLSTMCell_26/split/split_dim"
input: "RNN/BasicLSTMCell_26/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_26/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_26/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_26/split:2"
input: "RNN/BasicLSTMCell_26/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_26/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_25/add_2"
input: "RNN/BasicLSTMCell_26/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_26/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_26/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_26/Sigmoid_1"
input: "RNN/BasicLSTMCell_26/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_26/mul"
input: "RNN/BasicLSTMCell_26/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_26/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_26/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_26/Tanh_1"
input: "RNN/BasicLSTMCell_26/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_27/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_27/Linear/concat/concat_dim"
input: "Squeeze_27"
input: "RNN/BasicLSTMCell_26/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_27/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_27/add"
op: "Add"
input: "RNN/BasicLSTMCell_27/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_27/split"
op: "Split"
input: "RNN/BasicLSTMCell_27/split/split_dim"
input: "RNN/BasicLSTMCell_27/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_27/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_27/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_27/split:2"
input: "RNN/BasicLSTMCell_27/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_27/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_26/add_2"
input: "RNN/BasicLSTMCell_27/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_27/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_27/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_27/Sigmoid_1"
input: "RNN/BasicLSTMCell_27/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_27/mul"
input: "RNN/BasicLSTMCell_27/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_27/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_27/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_27/Tanh_1"
input: "RNN/BasicLSTMCell_27/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_28/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_28/Linear/concat/concat_dim"
input: "Squeeze_28"
input: "RNN/BasicLSTMCell_27/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_28/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_28/add"
op: "Add"
input: "RNN/BasicLSTMCell_28/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_28/split"
op: "Split"
input: "RNN/BasicLSTMCell_28/split/split_dim"
input: "RNN/BasicLSTMCell_28/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_28/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_28/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_28/split:2"
input: "RNN/BasicLSTMCell_28/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_28/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_27/add_2"
input: "RNN/BasicLSTMCell_28/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_28/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_28/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_28/Sigmoid_1"
input: "RNN/BasicLSTMCell_28/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_28/mul"
input: "RNN/BasicLSTMCell_28/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_28/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_28/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_28/Tanh_1"
input: "RNN/BasicLSTMCell_28/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_29/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_29/Linear/concat/concat_dim"
input: "Squeeze_29"
input: "RNN/BasicLSTMCell_28/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_29/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_29/add"
op: "Add"
input: "RNN/BasicLSTMCell_29/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_29/split"
op: "Split"
input: "RNN/BasicLSTMCell_29/split/split_dim"
input: "RNN/BasicLSTMCell_29/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_29/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_29/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_29/split:2"
input: "RNN/BasicLSTMCell_29/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_29/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_28/add_2"
input: "RNN/BasicLSTMCell_29/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_29/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_29/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_29/Sigmoid_1"
input: "RNN/BasicLSTMCell_29/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_29/mul"
input: "RNN/BasicLSTMCell_29/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_29/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_29/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_29/Tanh_1"
input: "RNN/BasicLSTMCell_29/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "concat"
op: "Concat"
input: "concat/concat_dim"
input: "RNN/BasicLSTMCell/mul_2"
input: "RNN/BasicLSTMCell_1/mul_2"
input: "RNN/BasicLSTMCell_2/mul_2"
input: "RNN/BasicLSTMCell_3/mul_2"
input: "RNN/BasicLSTMCell_4/mul_2"
input: "RNN/BasicLSTMCell_5/mul_2"
input: "RNN/BasicLSTMCell_6/mul_2"
input: "RNN/BasicLSTMCell_7/mul_2"
input: "RNN/BasicLSTMCell_8/mul_2"
input: "RNN/BasicLSTMCell_9/mul_2"
input: "RNN/BasicLSTMCell_10/mul_2"
input: "RNN/BasicLSTMCell_11/mul_2"
input: "RNN/BasicLSTMCell_12/mul_2"
input: "RNN/BasicLSTMCell_13/mul_2"
input: "RNN/BasicLSTMCell_14/mul_2"
input: "RNN/BasicLSTMCell_15/mul_2"
input: "RNN/BasicLSTMCell_16/mul_2"
input: "RNN/BasicLSTMCell_17/mul_2"
input: "RNN/BasicLSTMCell_18/mul_2"
input: "RNN/BasicLSTMCell_19/mul_2"
input: "RNN/BasicLSTMCell_20/mul_2"
input: "RNN/BasicLSTMCell_21/mul_2"
input: "RNN/BasicLSTMCell_22/mul_2"
input: "RNN/BasicLSTMCell_23/mul_2"
input: "RNN/BasicLSTMCell_24/mul_2"
input: "RNN/BasicLSTMCell_25/mul_2"
input: "RNN/BasicLSTMCell_26/mul_2"
input: "RNN/BasicLSTMCell_27/mul_2"
input: "RNN/BasicLSTMCell_28/mul_2"
input: "RNN/BasicLSTMCell_29/mul_2"
attr {
  key: "N"
  value {
    i: 30
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\377\377\377\377\000\001\000\000"
    }
  }
}

name: "Reshape"
op: "Reshape"
input: "concat"
input: "Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "concat_1/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "concat_1"
op: "Identity"
input: "Y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}

name: "Reshape_1"
op: "Reshape"
input: "concat_1"
input: "Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "clip"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 5.0
    }
  }
}

name: "init"
op: "NoOp"
input: "^embedding/Assign"
input: "^RNN/BasicLSTMCell/Linear/Matrix/Assign"
input: "^RNN/BasicLSTMCell/Linear/Bias/Assign"

  Model restored.
DESPUES=============
name: "X"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}

name: "Y"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}

name: "embedding"
op: "Variable"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 53
      }
      dim {
        size: 256
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "embedding/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "5\000\000\000\000\001\000\000"
    }
  }
}

name: "embedding/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.23791547119617462
    }
  }
}

name: "embedding/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.23791547119617462
    }
  }
}

name: "embedding/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "embedding/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "embedding/Initializer/random_uniform/sub"
op: "Sub"
input: "embedding/Initializer/random_uniform/max"
input: "embedding/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}

name: "embedding/Initializer/random_uniform/mul"
op: "Mul"
input: "embedding/Initializer/random_uniform/RandomUniform"
input: "embedding/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}

name: "embedding/Initializer/random_uniform"
op: "Add"
input: "embedding/Initializer/random_uniform/mul"
input: "embedding/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}

name: "embedding/Assign"
op: "Assign"
input: "embedding"
input: "embedding/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "embedding/read"
op: "Identity"
input: "embedding"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}

name: "embedding_lookup"
op: "Gather"
input: "embedding/read"
input: "X"
attr {
  key: "Tindices"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tparams"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}
attr {
  key: "validate_indices"
  value {
    b: true
  }
}

name: "split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "split"
op: "Split"
input: "split/split_dim"
input: "embedding_lookup"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 30
  }
}

name: "Squeeze"
op: "Squeeze"
input: "split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_1"
op: "Squeeze"
input: "split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_2"
op: "Squeeze"
input: "split:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_3"
op: "Squeeze"
input: "split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_4"
op: "Squeeze"
input: "split:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_5"
op: "Squeeze"
input: "split:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_6"
op: "Squeeze"
input: "split:6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_7"
op: "Squeeze"
input: "split:7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_8"
op: "Squeeze"
input: "split:8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_9"
op: "Squeeze"
input: "split:9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_10"
op: "Squeeze"
input: "split:10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_11"
op: "Squeeze"
input: "split:11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_12"
op: "Squeeze"
input: "split:12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_13"
op: "Squeeze"
input: "split:13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_14"
op: "Squeeze"
input: "split:14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_15"
op: "Squeeze"
input: "split:15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_16"
op: "Squeeze"
input: "split:16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_17"
op: "Squeeze"
input: "split:17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_18"
op: "Squeeze"
input: "split:18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_19"
op: "Squeeze"
input: "split:19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_20"
op: "Squeeze"
input: "split:20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_21"
op: "Squeeze"
input: "split:21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_22"
op: "Squeeze"
input: "split:22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_23"
op: "Squeeze"
input: "split:23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_24"
op: "Squeeze"
input: "split:24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_25"
op: "Squeeze"
input: "split:25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_26"
op: "Squeeze"
input: "split:26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_27"
op: "Squeeze"
input: "split:27"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_28"
op: "Squeeze"
input: "split:28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "Squeeze_29"
op: "Squeeze"
input: "split:29"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 1
    }
  }
}

name: "RNN/Shape"
op: "Shape"
input: "Squeeze"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/Slice/begin"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "RNN/Slice/size"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "RNN/Slice"
op: "Slice"
input: "RNN/Shape"
input: "RNN/Slice/begin"
input: "RNN/Slice/size"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "RNN/Squeeze"
op: "Squeeze"
input: "RNN/Slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "squeeze_dims"
  value {
    list {
      i: 0
    }
  }
}

name: "RNN/pack/1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 256
    }
  }
}

name: "RNN/pack"
op: "Pack"
input: "RNN/Squeeze"
input: "RNN/pack/1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "RNN/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "RNN/zeros"
op: "Fill"
input: "RNN/pack"
input: "RNN/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/pack_1/1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 256
    }
  }
}

name: "RNN/pack_1"
op: "Pack"
input: "RNN/Squeeze"
input: "RNN/pack_1/1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "RNN/zeros_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "RNN/zeros_1"
op: "Fill"
input: "RNN/pack_1"
input: "RNN/zeros_1/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix"
op: "Variable"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 512
      }
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\002\000\000\000\004\000\000"
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0765465572476387
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0765465572476387
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
op: "Sub"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
op: "Mul"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
op: "Add"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/Assign"
op: "Assign"
input: "RNN/BasicLSTMCell/Linear/Matrix"
input: "RNN/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "RNN/BasicLSTMCell/Linear/Matrix/read"
op: "Identity"
input: "RNN/BasicLSTMCell/Linear/Matrix"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell/Linear/concat/concat_dim"
input: "Squeeze"
input: "RNN/zeros_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell/Linear/Bias"
op: "Variable"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "RNN/BasicLSTMCell/Linear/Bias/Initializer/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 1024
        }
      }
      float_val: 0.0
    }
  }
}

name: "RNN/BasicLSTMCell/Linear/Bias/Assign"
op: "Assign"
input: "RNN/BasicLSTMCell/Linear/Bias"
input: "RNN/BasicLSTMCell/Linear/Bias/Initializer/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "RNN/BasicLSTMCell/Linear/Bias/read"
op: "Identity"
input: "RNN/BasicLSTMCell/Linear/Bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/add"
op: "Add"
input: "RNN/BasicLSTMCell/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell/split"
op: "Split"
input: "RNN/BasicLSTMCell/split/split_dim"
input: "RNN/BasicLSTMCell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell/add_1"
op: "Add"
input: "RNN/BasicLSTMCell/split:2"
input: "RNN/BasicLSTMCell/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/mul"
op: "Mul"
input: "RNN/zeros"
input: "RNN/BasicLSTMCell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell/Sigmoid_1"
input: "RNN/BasicLSTMCell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/add_2"
op: "Add"
input: "RNN/BasicLSTMCell/mul"
input: "RNN/BasicLSTMCell/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell/Tanh_1"
input: "RNN/BasicLSTMCell/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_1/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_1/Linear/concat/concat_dim"
input: "Squeeze_1"
input: "RNN/BasicLSTMCell/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_1/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_1/add"
op: "Add"
input: "RNN/BasicLSTMCell_1/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_1/split"
op: "Split"
input: "RNN/BasicLSTMCell_1/split/split_dim"
input: "RNN/BasicLSTMCell_1/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_1/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_1/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_1/split:2"
input: "RNN/BasicLSTMCell_1/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_1/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/mul"
op: "Mul"
input: "RNN/BasicLSTMCell/add_2"
input: "RNN/BasicLSTMCell_1/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_1/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_1/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_1/Sigmoid_1"
input: "RNN/BasicLSTMCell_1/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_1/mul"
input: "RNN/BasicLSTMCell_1/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_1/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_1/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_1/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_1/Tanh_1"
input: "RNN/BasicLSTMCell_1/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_2/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_2/Linear/concat/concat_dim"
input: "Squeeze_2"
input: "RNN/BasicLSTMCell_1/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_2/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_2/add"
op: "Add"
input: "RNN/BasicLSTMCell_2/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_2/split"
op: "Split"
input: "RNN/BasicLSTMCell_2/split/split_dim"
input: "RNN/BasicLSTMCell_2/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_2/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_2/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_2/split:2"
input: "RNN/BasicLSTMCell_2/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_2/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_1/add_2"
input: "RNN/BasicLSTMCell_2/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_2/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_2/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_2/Sigmoid_1"
input: "RNN/BasicLSTMCell_2/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_2/mul"
input: "RNN/BasicLSTMCell_2/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_2/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_2/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_2/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_2/Tanh_1"
input: "RNN/BasicLSTMCell_2/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_3/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_3/Linear/concat/concat_dim"
input: "Squeeze_3"
input: "RNN/BasicLSTMCell_2/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_3/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_3/add"
op: "Add"
input: "RNN/BasicLSTMCell_3/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_3/split"
op: "Split"
input: "RNN/BasicLSTMCell_3/split/split_dim"
input: "RNN/BasicLSTMCell_3/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_3/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_3/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_3/split:2"
input: "RNN/BasicLSTMCell_3/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_3/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_2/add_2"
input: "RNN/BasicLSTMCell_3/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_3/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_3/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_3/Sigmoid_1"
input: "RNN/BasicLSTMCell_3/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_3/mul"
input: "RNN/BasicLSTMCell_3/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_3/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_3/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_3/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_3/Tanh_1"
input: "RNN/BasicLSTMCell_3/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_4/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_4/Linear/concat/concat_dim"
input: "Squeeze_4"
input: "RNN/BasicLSTMCell_3/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_4/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_4/add"
op: "Add"
input: "RNN/BasicLSTMCell_4/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_4/split"
op: "Split"
input: "RNN/BasicLSTMCell_4/split/split_dim"
input: "RNN/BasicLSTMCell_4/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_4/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_4/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_4/split:2"
input: "RNN/BasicLSTMCell_4/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_4/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_3/add_2"
input: "RNN/BasicLSTMCell_4/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_4/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_4/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_4/Sigmoid_1"
input: "RNN/BasicLSTMCell_4/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_4/mul"
input: "RNN/BasicLSTMCell_4/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_4/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_4/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_4/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_4/Tanh_1"
input: "RNN/BasicLSTMCell_4/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_5/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_5/Linear/concat/concat_dim"
input: "Squeeze_5"
input: "RNN/BasicLSTMCell_4/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_5/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_5/add"
op: "Add"
input: "RNN/BasicLSTMCell_5/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_5/split"
op: "Split"
input: "RNN/BasicLSTMCell_5/split/split_dim"
input: "RNN/BasicLSTMCell_5/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_5/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_5/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_5/split:2"
input: "RNN/BasicLSTMCell_5/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_5/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_4/add_2"
input: "RNN/BasicLSTMCell_5/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_5/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_5/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_5/Sigmoid_1"
input: "RNN/BasicLSTMCell_5/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_5/mul"
input: "RNN/BasicLSTMCell_5/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_5/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_5/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_5/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_5/Tanh_1"
input: "RNN/BasicLSTMCell_5/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_6/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_6/Linear/concat/concat_dim"
input: "Squeeze_6"
input: "RNN/BasicLSTMCell_5/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_6/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_6/add"
op: "Add"
input: "RNN/BasicLSTMCell_6/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_6/split"
op: "Split"
input: "RNN/BasicLSTMCell_6/split/split_dim"
input: "RNN/BasicLSTMCell_6/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_6/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_6/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_6/split:2"
input: "RNN/BasicLSTMCell_6/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_6/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_5/add_2"
input: "RNN/BasicLSTMCell_6/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_6/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_6/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_6/Sigmoid_1"
input: "RNN/BasicLSTMCell_6/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_6/mul"
input: "RNN/BasicLSTMCell_6/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_6/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_6/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_6/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_6/Tanh_1"
input: "RNN/BasicLSTMCell_6/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_7/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_7/Linear/concat/concat_dim"
input: "Squeeze_7"
input: "RNN/BasicLSTMCell_6/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_7/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_7/add"
op: "Add"
input: "RNN/BasicLSTMCell_7/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_7/split"
op: "Split"
input: "RNN/BasicLSTMCell_7/split/split_dim"
input: "RNN/BasicLSTMCell_7/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_7/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_7/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_7/split:2"
input: "RNN/BasicLSTMCell_7/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_7/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_6/add_2"
input: "RNN/BasicLSTMCell_7/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_7/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_7/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_7/Sigmoid_1"
input: "RNN/BasicLSTMCell_7/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_7/mul"
input: "RNN/BasicLSTMCell_7/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_7/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_7/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_7/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_7/Tanh_1"
input: "RNN/BasicLSTMCell_7/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_8/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_8/Linear/concat/concat_dim"
input: "Squeeze_8"
input: "RNN/BasicLSTMCell_7/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_8/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_8/add"
op: "Add"
input: "RNN/BasicLSTMCell_8/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_8/split"
op: "Split"
input: "RNN/BasicLSTMCell_8/split/split_dim"
input: "RNN/BasicLSTMCell_8/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_8/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_8/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_8/split:2"
input: "RNN/BasicLSTMCell_8/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_8/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_7/add_2"
input: "RNN/BasicLSTMCell_8/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_8/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_8/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_8/Sigmoid_1"
input: "RNN/BasicLSTMCell_8/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_8/mul"
input: "RNN/BasicLSTMCell_8/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_8/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_8/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_8/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_8/Tanh_1"
input: "RNN/BasicLSTMCell_8/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_9/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_9/Linear/concat/concat_dim"
input: "Squeeze_9"
input: "RNN/BasicLSTMCell_8/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_9/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_9/add"
op: "Add"
input: "RNN/BasicLSTMCell_9/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_9/split"
op: "Split"
input: "RNN/BasicLSTMCell_9/split/split_dim"
input: "RNN/BasicLSTMCell_9/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_9/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_9/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_9/split:2"
input: "RNN/BasicLSTMCell_9/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_9/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_8/add_2"
input: "RNN/BasicLSTMCell_9/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_9/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_9/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_9/Sigmoid_1"
input: "RNN/BasicLSTMCell_9/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_9/mul"
input: "RNN/BasicLSTMCell_9/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_9/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_9/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_9/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_9/Tanh_1"
input: "RNN/BasicLSTMCell_9/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_10/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_10/Linear/concat/concat_dim"
input: "Squeeze_10"
input: "RNN/BasicLSTMCell_9/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_10/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_10/add"
op: "Add"
input: "RNN/BasicLSTMCell_10/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_10/split"
op: "Split"
input: "RNN/BasicLSTMCell_10/split/split_dim"
input: "RNN/BasicLSTMCell_10/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_10/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_10/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_10/split:2"
input: "RNN/BasicLSTMCell_10/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_10/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_9/add_2"
input: "RNN/BasicLSTMCell_10/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_10/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_10/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_10/Sigmoid_1"
input: "RNN/BasicLSTMCell_10/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_10/mul"
input: "RNN/BasicLSTMCell_10/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_10/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_10/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_10/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_10/Tanh_1"
input: "RNN/BasicLSTMCell_10/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_11/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_11/Linear/concat/concat_dim"
input: "Squeeze_11"
input: "RNN/BasicLSTMCell_10/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_11/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_11/add"
op: "Add"
input: "RNN/BasicLSTMCell_11/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_11/split"
op: "Split"
input: "RNN/BasicLSTMCell_11/split/split_dim"
input: "RNN/BasicLSTMCell_11/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_11/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_11/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_11/split:2"
input: "RNN/BasicLSTMCell_11/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_11/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_10/add_2"
input: "RNN/BasicLSTMCell_11/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_11/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_11/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_11/Sigmoid_1"
input: "RNN/BasicLSTMCell_11/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_11/mul"
input: "RNN/BasicLSTMCell_11/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_11/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_11/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_11/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_11/Tanh_1"
input: "RNN/BasicLSTMCell_11/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_12/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_12/Linear/concat/concat_dim"
input: "Squeeze_12"
input: "RNN/BasicLSTMCell_11/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_12/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_12/add"
op: "Add"
input: "RNN/BasicLSTMCell_12/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_12/split"
op: "Split"
input: "RNN/BasicLSTMCell_12/split/split_dim"
input: "RNN/BasicLSTMCell_12/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_12/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_12/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_12/split:2"
input: "RNN/BasicLSTMCell_12/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_12/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_11/add_2"
input: "RNN/BasicLSTMCell_12/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_12/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_12/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_12/Sigmoid_1"
input: "RNN/BasicLSTMCell_12/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_12/mul"
input: "RNN/BasicLSTMCell_12/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_12/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_12/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_12/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_12/Tanh_1"
input: "RNN/BasicLSTMCell_12/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_13/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_13/Linear/concat/concat_dim"
input: "Squeeze_13"
input: "RNN/BasicLSTMCell_12/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_13/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_13/add"
op: "Add"
input: "RNN/BasicLSTMCell_13/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_13/split"
op: "Split"
input: "RNN/BasicLSTMCell_13/split/split_dim"
input: "RNN/BasicLSTMCell_13/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_13/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_13/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_13/split:2"
input: "RNN/BasicLSTMCell_13/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_13/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_12/add_2"
input: "RNN/BasicLSTMCell_13/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_13/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_13/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_13/Sigmoid_1"
input: "RNN/BasicLSTMCell_13/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_13/mul"
input: "RNN/BasicLSTMCell_13/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_13/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_13/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_13/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_13/Tanh_1"
input: "RNN/BasicLSTMCell_13/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_14/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_14/Linear/concat/concat_dim"
input: "Squeeze_14"
input: "RNN/BasicLSTMCell_13/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_14/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_14/add"
op: "Add"
input: "RNN/BasicLSTMCell_14/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_14/split"
op: "Split"
input: "RNN/BasicLSTMCell_14/split/split_dim"
input: "RNN/BasicLSTMCell_14/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_14/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_14/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_14/split:2"
input: "RNN/BasicLSTMCell_14/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_14/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_13/add_2"
input: "RNN/BasicLSTMCell_14/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_14/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_14/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_14/Sigmoid_1"
input: "RNN/BasicLSTMCell_14/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_14/mul"
input: "RNN/BasicLSTMCell_14/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_14/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_14/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_14/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_14/Tanh_1"
input: "RNN/BasicLSTMCell_14/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_15/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_15/Linear/concat/concat_dim"
input: "Squeeze_15"
input: "RNN/BasicLSTMCell_14/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_15/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_15/add"
op: "Add"
input: "RNN/BasicLSTMCell_15/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_15/split"
op: "Split"
input: "RNN/BasicLSTMCell_15/split/split_dim"
input: "RNN/BasicLSTMCell_15/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_15/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_15/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_15/split:2"
input: "RNN/BasicLSTMCell_15/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_15/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_14/add_2"
input: "RNN/BasicLSTMCell_15/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_15/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_15/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_15/Sigmoid_1"
input: "RNN/BasicLSTMCell_15/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_15/mul"
input: "RNN/BasicLSTMCell_15/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_15/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_15/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_15/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_15/Tanh_1"
input: "RNN/BasicLSTMCell_15/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_16/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_16/Linear/concat/concat_dim"
input: "Squeeze_16"
input: "RNN/BasicLSTMCell_15/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_16/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_16/add"
op: "Add"
input: "RNN/BasicLSTMCell_16/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_16/split"
op: "Split"
input: "RNN/BasicLSTMCell_16/split/split_dim"
input: "RNN/BasicLSTMCell_16/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_16/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_16/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_16/split:2"
input: "RNN/BasicLSTMCell_16/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_16/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_15/add_2"
input: "RNN/BasicLSTMCell_16/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_16/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_16/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_16/Sigmoid_1"
input: "RNN/BasicLSTMCell_16/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_16/mul"
input: "RNN/BasicLSTMCell_16/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_16/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_16/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_16/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_16/Tanh_1"
input: "RNN/BasicLSTMCell_16/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_17/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_17/Linear/concat/concat_dim"
input: "Squeeze_17"
input: "RNN/BasicLSTMCell_16/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_17/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_17/add"
op: "Add"
input: "RNN/BasicLSTMCell_17/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_17/split"
op: "Split"
input: "RNN/BasicLSTMCell_17/split/split_dim"
input: "RNN/BasicLSTMCell_17/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_17/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_17/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_17/split:2"
input: "RNN/BasicLSTMCell_17/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_17/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_16/add_2"
input: "RNN/BasicLSTMCell_17/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_17/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_17/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_17/Sigmoid_1"
input: "RNN/BasicLSTMCell_17/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_17/mul"
input: "RNN/BasicLSTMCell_17/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_17/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_17/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_17/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_17/Tanh_1"
input: "RNN/BasicLSTMCell_17/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_18/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_18/Linear/concat/concat_dim"
input: "Squeeze_18"
input: "RNN/BasicLSTMCell_17/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_18/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_18/add"
op: "Add"
input: "RNN/BasicLSTMCell_18/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_18/split"
op: "Split"
input: "RNN/BasicLSTMCell_18/split/split_dim"
input: "RNN/BasicLSTMCell_18/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_18/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_18/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_18/split:2"
input: "RNN/BasicLSTMCell_18/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_18/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_17/add_2"
input: "RNN/BasicLSTMCell_18/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_18/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_18/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_18/Sigmoid_1"
input: "RNN/BasicLSTMCell_18/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_18/mul"
input: "RNN/BasicLSTMCell_18/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_18/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_18/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_18/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_18/Tanh_1"
input: "RNN/BasicLSTMCell_18/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_19/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_19/Linear/concat/concat_dim"
input: "Squeeze_19"
input: "RNN/BasicLSTMCell_18/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_19/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_19/add"
op: "Add"
input: "RNN/BasicLSTMCell_19/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_19/split"
op: "Split"
input: "RNN/BasicLSTMCell_19/split/split_dim"
input: "RNN/BasicLSTMCell_19/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_19/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_19/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_19/split:2"
input: "RNN/BasicLSTMCell_19/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_19/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_18/add_2"
input: "RNN/BasicLSTMCell_19/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_19/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_19/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_19/Sigmoid_1"
input: "RNN/BasicLSTMCell_19/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_19/mul"
input: "RNN/BasicLSTMCell_19/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_19/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_19/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_19/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_19/Tanh_1"
input: "RNN/BasicLSTMCell_19/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_20/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_20/Linear/concat/concat_dim"
input: "Squeeze_20"
input: "RNN/BasicLSTMCell_19/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_20/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_20/add"
op: "Add"
input: "RNN/BasicLSTMCell_20/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_20/split"
op: "Split"
input: "RNN/BasicLSTMCell_20/split/split_dim"
input: "RNN/BasicLSTMCell_20/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_20/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_20/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_20/split:2"
input: "RNN/BasicLSTMCell_20/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_20/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_19/add_2"
input: "RNN/BasicLSTMCell_20/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_20/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_20/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_20/Sigmoid_1"
input: "RNN/BasicLSTMCell_20/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_20/mul"
input: "RNN/BasicLSTMCell_20/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_20/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_20/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_20/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_20/Tanh_1"
input: "RNN/BasicLSTMCell_20/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_21/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_21/Linear/concat/concat_dim"
input: "Squeeze_21"
input: "RNN/BasicLSTMCell_20/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_21/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_21/add"
op: "Add"
input: "RNN/BasicLSTMCell_21/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_21/split"
op: "Split"
input: "RNN/BasicLSTMCell_21/split/split_dim"
input: "RNN/BasicLSTMCell_21/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_21/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_21/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_21/split:2"
input: "RNN/BasicLSTMCell_21/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_21/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_20/add_2"
input: "RNN/BasicLSTMCell_21/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_21/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_21/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_21/Sigmoid_1"
input: "RNN/BasicLSTMCell_21/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_21/mul"
input: "RNN/BasicLSTMCell_21/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_21/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_21/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_21/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_21/Tanh_1"
input: "RNN/BasicLSTMCell_21/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_22/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_22/Linear/concat/concat_dim"
input: "Squeeze_22"
input: "RNN/BasicLSTMCell_21/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_22/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_22/add"
op: "Add"
input: "RNN/BasicLSTMCell_22/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_22/split"
op: "Split"
input: "RNN/BasicLSTMCell_22/split/split_dim"
input: "RNN/BasicLSTMCell_22/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_22/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_22/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_22/split:2"
input: "RNN/BasicLSTMCell_22/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_22/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_21/add_2"
input: "RNN/BasicLSTMCell_22/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_22/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_22/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_22/Sigmoid_1"
input: "RNN/BasicLSTMCell_22/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_22/mul"
input: "RNN/BasicLSTMCell_22/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_22/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_22/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_22/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_22/Tanh_1"
input: "RNN/BasicLSTMCell_22/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_23/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_23/Linear/concat/concat_dim"
input: "Squeeze_23"
input: "RNN/BasicLSTMCell_22/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_23/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_23/add"
op: "Add"
input: "RNN/BasicLSTMCell_23/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_23/split"
op: "Split"
input: "RNN/BasicLSTMCell_23/split/split_dim"
input: "RNN/BasicLSTMCell_23/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_23/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_23/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_23/split:2"
input: "RNN/BasicLSTMCell_23/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_23/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_22/add_2"
input: "RNN/BasicLSTMCell_23/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_23/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_23/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_23/Sigmoid_1"
input: "RNN/BasicLSTMCell_23/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_23/mul"
input: "RNN/BasicLSTMCell_23/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_23/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_23/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_23/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_23/Tanh_1"
input: "RNN/BasicLSTMCell_23/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_24/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_24/Linear/concat/concat_dim"
input: "Squeeze_24"
input: "RNN/BasicLSTMCell_23/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_24/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_24/add"
op: "Add"
input: "RNN/BasicLSTMCell_24/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_24/split"
op: "Split"
input: "RNN/BasicLSTMCell_24/split/split_dim"
input: "RNN/BasicLSTMCell_24/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_24/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_24/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_24/split:2"
input: "RNN/BasicLSTMCell_24/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_24/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_23/add_2"
input: "RNN/BasicLSTMCell_24/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_24/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_24/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_24/Sigmoid_1"
input: "RNN/BasicLSTMCell_24/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_24/mul"
input: "RNN/BasicLSTMCell_24/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_24/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_24/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_24/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_24/Tanh_1"
input: "RNN/BasicLSTMCell_24/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_25/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_25/Linear/concat/concat_dim"
input: "Squeeze_25"
input: "RNN/BasicLSTMCell_24/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_25/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_25/add"
op: "Add"
input: "RNN/BasicLSTMCell_25/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_25/split"
op: "Split"
input: "RNN/BasicLSTMCell_25/split/split_dim"
input: "RNN/BasicLSTMCell_25/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_25/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_25/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_25/split:2"
input: "RNN/BasicLSTMCell_25/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_25/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_24/add_2"
input: "RNN/BasicLSTMCell_25/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_25/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_25/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_25/Sigmoid_1"
input: "RNN/BasicLSTMCell_25/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_25/mul"
input: "RNN/BasicLSTMCell_25/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_25/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_25/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_25/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_25/Tanh_1"
input: "RNN/BasicLSTMCell_25/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_26/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_26/Linear/concat/concat_dim"
input: "Squeeze_26"
input: "RNN/BasicLSTMCell_25/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_26/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_26/add"
op: "Add"
input: "RNN/BasicLSTMCell_26/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_26/split"
op: "Split"
input: "RNN/BasicLSTMCell_26/split/split_dim"
input: "RNN/BasicLSTMCell_26/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_26/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_26/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_26/split:2"
input: "RNN/BasicLSTMCell_26/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_26/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_25/add_2"
input: "RNN/BasicLSTMCell_26/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_26/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_26/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_26/Sigmoid_1"
input: "RNN/BasicLSTMCell_26/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_26/mul"
input: "RNN/BasicLSTMCell_26/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_26/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_26/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_26/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_26/Tanh_1"
input: "RNN/BasicLSTMCell_26/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_27/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_27/Linear/concat/concat_dim"
input: "Squeeze_27"
input: "RNN/BasicLSTMCell_26/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_27/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_27/add"
op: "Add"
input: "RNN/BasicLSTMCell_27/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_27/split"
op: "Split"
input: "RNN/BasicLSTMCell_27/split/split_dim"
input: "RNN/BasicLSTMCell_27/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_27/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_27/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_27/split:2"
input: "RNN/BasicLSTMCell_27/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_27/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_26/add_2"
input: "RNN/BasicLSTMCell_27/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_27/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_27/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_27/Sigmoid_1"
input: "RNN/BasicLSTMCell_27/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_27/mul"
input: "RNN/BasicLSTMCell_27/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_27/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_27/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_27/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_27/Tanh_1"
input: "RNN/BasicLSTMCell_27/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_28/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_28/Linear/concat/concat_dim"
input: "Squeeze_28"
input: "RNN/BasicLSTMCell_27/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_28/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_28/add"
op: "Add"
input: "RNN/BasicLSTMCell_28/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_28/split"
op: "Split"
input: "RNN/BasicLSTMCell_28/split/split_dim"
input: "RNN/BasicLSTMCell_28/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_28/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_28/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_28/split:2"
input: "RNN/BasicLSTMCell_28/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_28/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_27/add_2"
input: "RNN/BasicLSTMCell_28/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_28/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_28/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_28/Sigmoid_1"
input: "RNN/BasicLSTMCell_28/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_28/mul"
input: "RNN/BasicLSTMCell_28/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_28/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_28/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_28/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_28/Tanh_1"
input: "RNN/BasicLSTMCell_28/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/Linear/concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_29/Linear/concat"
op: "Concat"
input: "RNN/BasicLSTMCell_29/Linear/concat/concat_dim"
input: "Squeeze_29"
input: "RNN/BasicLSTMCell_28/mul_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/Linear/MatMul"
op: "MatMul"
input: "RNN/BasicLSTMCell_29/Linear/concat"
input: "RNN/BasicLSTMCell/Linear/Matrix/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}

name: "RNN/BasicLSTMCell_29/add"
op: "Add"
input: "RNN/BasicLSTMCell_29/Linear/MatMul"
input: "RNN/BasicLSTMCell/Linear/Bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "RNN/BasicLSTMCell_29/split"
op: "Split"
input: "RNN/BasicLSTMCell_29/split/split_dim"
input: "RNN/BasicLSTMCell_29/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 4
  }
}

name: "RNN/BasicLSTMCell_29/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "RNN/BasicLSTMCell_29/add_1"
op: "Add"
input: "RNN/BasicLSTMCell_29/split:2"
input: "RNN/BasicLSTMCell_29/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/Sigmoid"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_29/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/mul"
op: "Mul"
input: "RNN/BasicLSTMCell_28/add_2"
input: "RNN/BasicLSTMCell_29/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/Sigmoid_1"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_29/split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/Tanh"
op: "Tanh"
input: "RNN/BasicLSTMCell_29/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/mul_1"
op: "Mul"
input: "RNN/BasicLSTMCell_29/Sigmoid_1"
input: "RNN/BasicLSTMCell_29/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/add_2"
op: "Add"
input: "RNN/BasicLSTMCell_29/mul"
input: "RNN/BasicLSTMCell_29/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/Tanh_1"
op: "Tanh"
input: "RNN/BasicLSTMCell_29/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/Sigmoid_2"
op: "Sigmoid"
input: "RNN/BasicLSTMCell_29/split:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "RNN/BasicLSTMCell_29/mul_2"
op: "Mul"
input: "RNN/BasicLSTMCell_29/Tanh_1"
input: "RNN/BasicLSTMCell_29/Sigmoid_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "concat/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "concat"
op: "Concat"
input: "concat/concat_dim"
input: "RNN/BasicLSTMCell/mul_2"
input: "RNN/BasicLSTMCell_1/mul_2"
input: "RNN/BasicLSTMCell_2/mul_2"
input: "RNN/BasicLSTMCell_3/mul_2"
input: "RNN/BasicLSTMCell_4/mul_2"
input: "RNN/BasicLSTMCell_5/mul_2"
input: "RNN/BasicLSTMCell_6/mul_2"
input: "RNN/BasicLSTMCell_7/mul_2"
input: "RNN/BasicLSTMCell_8/mul_2"
input: "RNN/BasicLSTMCell_9/mul_2"
input: "RNN/BasicLSTMCell_10/mul_2"
input: "RNN/BasicLSTMCell_11/mul_2"
input: "RNN/BasicLSTMCell_12/mul_2"
input: "RNN/BasicLSTMCell_13/mul_2"
input: "RNN/BasicLSTMCell_14/mul_2"
input: "RNN/BasicLSTMCell_15/mul_2"
input: "RNN/BasicLSTMCell_16/mul_2"
input: "RNN/BasicLSTMCell_17/mul_2"
input: "RNN/BasicLSTMCell_18/mul_2"
input: "RNN/BasicLSTMCell_19/mul_2"
input: "RNN/BasicLSTMCell_20/mul_2"
input: "RNN/BasicLSTMCell_21/mul_2"
input: "RNN/BasicLSTMCell_22/mul_2"
input: "RNN/BasicLSTMCell_23/mul_2"
input: "RNN/BasicLSTMCell_24/mul_2"
input: "RNN/BasicLSTMCell_25/mul_2"
input: "RNN/BasicLSTMCell_26/mul_2"
input: "RNN/BasicLSTMCell_27/mul_2"
input: "RNN/BasicLSTMCell_28/mul_2"
input: "RNN/BasicLSTMCell_29/mul_2"
attr {
  key: "N"
  value {
    i: 30
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\377\377\377\377\000\001\000\000"
    }
  }
}

name: "Reshape"
op: "Reshape"
input: "concat"
input: "Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "concat_1/concat_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "concat_1"
op: "Identity"
input: "Y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}

name: "Reshape_1"
op: "Reshape"
input: "concat_1"
input: "Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "clip"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 5.0
    }
  }
}

name: "init"
op: "NoOp"
input: "^embedding/Assign"
input: "^RNN/BasicLSTMCell/Linear/Matrix/Assign"
input: "^RNN/BasicLSTMCell/Linear/Bias/Assign"

name: "save/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "model"
    }
  }
}

name: "save/save/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 3
        }
      }
      string_val: "RNN/BasicLSTMCell/Linear/Bias"
      string_val: "RNN/BasicLSTMCell/Linear/Matrix"
      string_val: "embedding"
    }
  }
}

name: "save/save/shapes_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 3
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}

name: "save/save"
op: "SaveSlices"
input: "save/Const"
input: "save/save/tensor_names"
input: "save/save/shapes_and_slices"
input: "RNN/BasicLSTMCell/Linear/Bias"
input: "RNN/BasicLSTMCell/Linear/Matrix"
input: "embedding"
attr {
  key: "T"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}

name: "save/control_dependency"
op: "Identity"
input: "save/Const"
input: "^save/save"
attr {
  key: "T"
  value {
    type: DT_STRING
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@save/Const"
    }
  }
}

name: "save/restore_slice/tensor_name"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "RNN/BasicLSTMCell/Linear/Bias"
    }
  }
}

name: "save/restore_slice/shape_and_slice"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: ""
    }
  }
}

name: "save/restore_slice"
op: "RestoreSlice"
input: "save/Const"
input: "save/restore_slice/tensor_name"
input: "save/restore_slice/shape_and_slice"
attr {
  key: "dt"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "preferred_shard"
  value {
    i: -1
  }
}

name: "save/Assign"
op: "Assign"
input: "RNN/BasicLSTMCell/Linear/Bias"
input: "save/restore_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/restore_slice_1/tensor_name"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}

name: "save/restore_slice_1/shape_and_slice"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: ""
    }
  }
}

name: "save/restore_slice_1"
op: "RestoreSlice"
input: "save/Const"
input: "save/restore_slice_1/tensor_name"
input: "save/restore_slice_1/shape_and_slice"
attr {
  key: "dt"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "preferred_shard"
  value {
    i: -1
  }
}

name: "save/Assign_1"
op: "Assign"
input: "RNN/BasicLSTMCell/Linear/Matrix"
input: "save/restore_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@RNN/BasicLSTMCell/Linear/Matrix"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/restore_slice_2/tensor_name"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "embedding"
    }
  }
}

name: "save/restore_slice_2/shape_and_slice"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: ""
    }
  }
}

name: "save/restore_slice_2"
op: "RestoreSlice"
input: "save/Const"
input: "save/restore_slice_2/tensor_name"
input: "save/restore_slice_2/shape_and_slice"
attr {
  key: "dt"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "preferred_shard"
  value {
    i: -1
  }
}

name: "save/Assign_2"
op: "Assign"
input: "embedding"
input: "save/restore_slice_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@embedding"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/restore_all"
op: "NoOp"
input: "^save/Assign"
input: "^save/Assign_1"
input: "^save/Assign_2"

